const { Queue } = require("./index");
// 击鼓传花是一个常见的面试算法题.使用队列可以非常方便的实现最终的结果.

// 原游戏规则：
// 口 班级中玩一个游戏，所有学生围成一圈，从某位同学手里开始向旁边的同学传一束花.
// 口 这个时候某个人（比如班长）,在击鼓，鼓声停下的一颗，花落在谁手里，谁就出来表演节目.

// 修改游戏规则：
// 口 我们来修改一下这个游戏规则.
// 口几个朋友一起玩一个游戏，围成一圈，开始数数，数到某个数字的人自动淘汰，然后下个人重新从 1 开始数
// 口最后剩下的这个人会获得胜利，请问最后剩下的是原来在哪一个位置上的人？

// 封装一个基于队列的函数
// 口 参数：所有参与人的姓名，基于的数字
// 口结果：最终剩下的一人的姓名

// 解决思路
// 1.队列里不断循环，队列外加一个计数器。
// 2.出队一个计数器+1，看计数器等不等于5，不过不等于，则证明不是第五个，所以不淘汰。
// 3.不淘汰的元素出队，然后再加入到队尾，计数器加1
// 4.淘汰的直接出队，不加入到队尾，计数器归为1
// 5.这样人越来越少，判断结束的条件是队列的元素是否等于一个

let person = ["1", "2", "3", "4", "5"];
let q1 = new Queue();
person.forEach((item) => q1.emqueue(item));
let counter = 1;
// 击鼓传花的淘汰值
let num = 3;
while (q1.size() > 1) {
  let caller = q1.dequeue();
  if (num != counter) {
    q1.emqueue(caller);
    counter++;
  } else {
    counter = 1;
  }
}
console.log(q1);
